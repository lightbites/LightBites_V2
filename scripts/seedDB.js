//HERE IS WHERE YOUR SQL SCRIPTS WILL BE PLACED

var db = require("../models");

// // // // // Test data
// db.sequelize.query("INSERT INTO stock (title, description, protein, carbs, calories, category, fats, sodium, vegetarianOption, updatedAt, createdAt, fulfillment_date, price, repeatItem, title1, title2, title3, line04, line05, line06, line07, line08, line09, line10, line11, line12, line13, line14, line15, line16, line17, line18, line19, line20, imageURL) VALUES ('','','','','','','','',1,CURDATE(),CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),8.00,1,'Steak wrapped veggies with side salad','','Regular','','Keto friendly, low carb','Calories: 298.3','Protein- 35.8g','Carbs- 10.7g','Fats- 32g','','Steak','Bell pepper','Asparagus','','','','','','','','');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock (title, description, protein, carbs, calories, category, fats, sodium, vegetarianOption, updatedAt, createdAt, fulfillment_date, price, repeatItem, title1, title2, title3, line04, line05, line06, line07, line08, line09, line10, line11, line12, line13, line14, line15, line16, line17, line18, line19, line20, imageURL) VALUES ('','','','','','','','',1,CURDATE(),CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),8.00,1,'Keto/ Low Carb Pizza Casserole & Side salad','','Regular','','Calories 147 Calories from Fat 90','% Daily Value*','Total Fat 10g 15%','Saturated Fat 4g 20%' ,'Polyunsaturated Fat 1g','Monounsaturated Fat 2g','Cholesterol 69mg','Sodium 194mg','','-Uncured pepperoni','-Cauliflower','-Mozzarella cheese','-Tomatoes','','can offer Vegetarian option, just ask','','');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock (title, description, protein, carbs, calories, category, fats, sodium, vegetarianOption, updatedAt, createdAt, fulfillment_date, price, repeatItem, title1, title2, title3, line04, line05, line06, line07, line08, line09, line10, line11, line12, line13, line14, line15, line16, line17, line18, line19, line20, imageURL) VALUES ('','','','','','','','',1,CURDATE(),CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),8.00,1,'Garlic Chicken stir fry','','Regular','','Calories: 316.2','Carbs: 23.6','Fats: 6.5','Protein: 43.9','','-Chicken','-Broccoli','-Bell pepper','-Mushrooms','','','','','','','','');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock (title, description, protein, carbs, calories, category, fats, sodium, vegetarianOption, updatedAt, createdAt, fulfillment_date, price, repeatItem, title1, title2, title3, line04, line05, line06, line07, line08, line09, line10, line11, line12, line13, line14, line15, line16, line17, line18, line19, line20, imageURL) VALUES ('','','','','','','','',1,CURDATE(),CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),8.00,1,'Basil Pesto Chicken, Brn Rice & Mixed Veggies','','Regular','','Calories: 560','Carbs: 36.5','Fats: 31.2','Protein:47.2','','-Basil Pesto','-Chicken','-Mixed Veggies(may change weekly)','-Brown rice','','','','','','','','');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock (title, description, protein, carbs, calories, category, fats, sodium, vegetarianOption, updatedAt, createdAt, fulfillment_date, price, repeatItem, title1, title2, title3, line04, line05, line06, line07, line08, line09, line10, line11, line12, line13, line14, line15, line16, line17, line18, line19, line20, imageURL) VALUES ('','','','','','','','',1,CURDATE(),CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4.00,1,'In Season Fruit Cups','','Regular','','Will change weekly','','','','','','','','','','','','','','','','');").then(([results, metadata]) => {   });



// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),1,1,8);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),2,1,8);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),3,1,8);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,2,16);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,3,12);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),2,2,16);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),3,1,8);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,1,8);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO shopping_cart (unique_id, order_id, fulfillment_date, meal_id, quantity, price) VALUES (2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,4,16);").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO customer (updatedAt, createdAt, firstname, lastname, phonenumber, email, password, address1, address2, address3, city, state, zip) VALUES (CURDATE(),CURDATE(),'Anthony','Duncan','281-555-1234','test@gmail.com','password123','1234 test rd','Apt 001', '', 'Austin','TX','78750');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO customer (updatedAt, createdAt, firstname, lastname, phonenumber, email, password, address1, address2, address3, city, state, zip) VALUES (CURDATE(),CURDATE(),'Justin','Mozley','281-500-1234','test1@gmail.com','password123','1120 test ln','Apt 002', '', 'Buda','TX','78610');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO customer (updatedAt, createdAt, firstname, lastname, phonenumber, email, password, address1, address2, address3, city, state, zip) VALUES (CURDATE(),CURDATE(),'Owais','Jamil','281-550-1234','test2@gmail.com','password123','1234 test ave','', '', 'Kyle','TX','78610');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO customer (updatedAt, createdAt, firstname, lastname, phonenumber, email, password, address1, address2, address3, city, state, zip) VALUES (CURDATE(),CURDATE(),'Kevin','Henderson','281-000-1234','test3@gmail.com','password123','1235 test rd','Apt 004', '', 'Buda','TX','78610');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'1',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'1',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'1',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'1',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'2',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'2',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'2',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO orders (updatedAt, createdAt, unique_id, order_date, fulfillment_date, order_type, delivery_date, order_status) VALUES (CURDATE(),CURDATE(),'2',now(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'Delivery',(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),'In Progress');").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),1,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),2,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),3,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,2,16,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,3,12,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),2,2,16,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),3,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO what_ordered (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,4,16,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),1,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),2,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,2,16,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),1,1,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,3,12,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),3,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),4,1,8,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO order_history (updatedAt, createdAt, unique_id, order_id, fulfillment_date, meal_id, quantity, price, order_date, delivery_date) VALUES (CURDATE(),CURDATE(),2,2,(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)),5,4,16,CURDATE(),(SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)));").then(([results, metadata]) => {   });
  
// // // // // Items available in week one
// db.sequelize.query("SELECT * FROM light_bites_db.stock s WHERE s.fulfillment_date = (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY));").then(([results, metadata]) => {   });

// // // // // Items available in week two
// db.sequelize.query("SELECT * FROM light_bites_db.stock s WHERE s.fulfillment_date = (SELECT DATE_ADD(CURDATE(), INTERVAL (16 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY));").then(([results, metadata]) => {   });

// // // // // Items available in week three
// db.sequelize.query("SELECT * FROM light_bites_db.stock s WHERE s.fulfillment_date = (SELECT DATE_ADD(CURDATE(), INTERVAL (23 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY));").then(([results, metadata]) => {   });

// // // // // Items available in week four
// db.sequelize.query("SELECT * FROM light_bites_db.stock s WHERE s.fulfillment_date = (SELECT DATE_ADD(CURDATE(), INTERVAL (30 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY));").then(([results, metadata]) => {   });

// // // // // Items available any week
// db.sequelize.query("").then(([results, metadata]) => {   });
// db.sequelize.query("").then(([results, metadata]) => {   });
// db.sequelize.query("").then(([results, metadata]) => {   });
// db.sequelize.query("").then(([results, metadata]) => {   });
// db.sequelize.query("").then(([results, metadata]) => {   });
// db.sequelize.query("").then(([results, metadata]) => {   });


// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('In Season Fruit Cups', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 4, 0, 'In Season Fruit Cups', '', 'Regular', '', 'Will change weekly', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Breakfast to-go box', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 5, 0, 'Breakfast to-go box', '', 'Regular', '', 'Calories: 371', '', 'Cheddar cheese cubes', 'Berry mix', 'Egg muffin: mushroom, spinach', 'Almonds', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '371 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Protein Breakfast', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 6, 0, 'Protein Breakfast', '', 'Regular', '', 'Calories:371', '', 'Will change weekly', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '371 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Steak wrapped veggies with side salad', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 8, 1, 'Steak wrapped veggies with side salad', '', 'Regular', '', 'Keto friendly, low carb', 'Calories: 298.3', 'Protein- 35.8g', 'Carbs- 10.7g', 'Fats- 32g', '', 'Steak', 'Bell pepper', 'Asparagus', '', '', '', '', '', '', '', '', '', 'Protein: 35.8g', 'Carbs: 10.7g', '298.3 cals', '', 'Fats: 32g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Garlic Chicken Stir Fry', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 8, 1, 'Garlic Chicken Stir Fry', '', 'Regular', '', 'Calories: 316.2', 'Carbs: 23.6', 'Fats: 6.5', 'Protein: 43.9', '', '-Chicken', '-Broccoli ', '-Bell pepper', '-Mushrooms', '', '', '', '', '', '', '', '', '', 'Protein: 43.9g', 'Carbs: 23.6g', '316.2 cals', '', 'Fats: 6.5g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Basil Pesto Chicken, Brn Rice & Mixed Veggies', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 8, 1, 'Basil Pesto Chicken, Brn Rice & Mixed Veggies', '', 'Regular', '', 'Calories: 560', 'Carbs: 36.5', 'Fats: 31.2', 'Protein: 47.2', '', '-Basil Pesto', '-Chicken', '-Mixed Veggies(may change weekly)', '-Brown rice', '', '', '', '', '', '', '', '', '', 'Protein: 47.2g', 'Carbs: 36.5g', '560 cals', '', 'Fats: 31.2g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Turkey Stuffed Peppers - LOW CARB', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 8, 1, 'Turkey Stuffed Peppers - LOW CARB', '', 'Regular', '', '380 calories ', '-Ground turkey', '-tomato', '-cauliflower', '-cheese', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '380 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Vegan Broccoli Stir fry', (SELECT DATE_ADD(CURDATE(), INTERVAL (09 - IF(DAYOFWEEK(CURDATE())=1, 08, DAYOFWEEK(CURDATE()))) DAY)), 8, 1, 'Vegan Broccoli Stir fry', '', 'Regular', '', 'Calories: 294.2', 'Carbs: 57.6g', 'Fats: 3.4 g', 'Protein: 14.4g', '', '-Mushrooms', '-Broccoli', '-Carrots', '-Bell pepper', '-Snap peas', '', '', '', '', '', '', '', '', 'Protein: 14.4g', 'Carbs: 57.6g', '294.2 cals', '', 'Fats: 3.4g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Bunless Turkey Burger, Brn rice & Veggies', , 8, 2, 'Bunless Turkey Burger, Brn rice & Veggies', '', 'Regular', '', 'Calories: 484', 'Carbs: 35.8g', 'Fats: 12.1g', 'Protein: 27.2g', '', '-Turkey Patty', '-Romaine lettuce', '-Tomato', '-Brown rice', '', '', '', '', '', '', '', '', '', 'Protein: 27.2g', 'Carbs: 35.8g', '484 cals', '', 'Fats: 12.1g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Chicken Egg Roll Bowl', , 8, 2, 'Chicken Egg Roll Bowl', '', 'Regular', '', '223.6 calories', 'Protein: 19.9g', 'Carbs: 5.8g', 'Fats: 2.2g', '', 'Cabbage mix', 'stirfry sauce', 'chicken', 'carrots', '', '', '', '', '', '', '', '', '', 'Protein: 19.9g', 'Carbs: 5.8g', '223.6 cals', '', 'Fats: 2.2g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Healthy Bacon Butternut squash Mac N Cheese- with Broccoli', , 8, 2, 'Healthy Bacon Butternut squash Mac N Cheese- with Broccoli', '', 'Regular', '', 'Calories 432 Calories from Fat 135…', 'View more', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '432 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('SPICY Korean Chili chicken over cauliflower fried rice', , 8, 2, 'SPICY Korean Chili chicken over cauliflower fried rice', '', 'Regular', '', 'Paleo friendly/GF', '-Homemade chili sauce', '-chicken', '-cauliflower', '-egg', '-peas and carrots', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Zucchini Lasagna', , 8, 2, 'Zucchini Lasagna', '', 'Regular', '', 'Calories: 372', 'Carbs: 15.5g', 'Fat: 19.4g', 'Protein: 30.1g', '', 'Zucchini', 'Ground beef', 'Cheese', 'Tomatoes', 'Mushrooms', '', '', '', '', '', '', '', '', 'Protein: 30.1g', 'Carbs: 15.5g', '372 cals', '', 'Fat: 19.4g', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Egg Muffins', , 4, 2, 'Egg Muffins', '', 'Regular', '', 'Calories: 80', 'Mushrooms', 'Dairy-free', 'Spinach', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '80 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Paleo banana pancakes', , 5, 2, 'Paleo banana pancakes', '', 'Regular', '', 'Paleo friendly', '-Banana', '-Eggs', '', 'contains 2 pancakes', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Honey Siracha Glazed Meatballs, Brown Rice & Veggies', , 8, 3, 'Honey Siracha Glazed Meatballs, Brown Rice & Veggies', '', 'Regular', '', 'Substitute Cauliflower rice ( Just Ask) ', '595 calories with brown rice', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '595 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Simple mealprep chicken bowl', , 8, 3, 'Simple mealprep chicken bowl', '', 'Regular', '', 'Calories: 454', '', 'Seasoned chicken', 'red potatoes', 'veggies', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '454 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('LOW CARB 4 Layer Beef & Bacon Casserole & Salad Greens', , 8, 3, 'LOW CARB 4 Layer Beef & Bacon Casserole & Salad Greens', '', 'Regular', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Creamy Cajun Chicken bake with bell peppers', , 8, 3, 'Creamy Cajun Chicken bake with bell peppers', '', 'Regular', '', 'Calories: 358', '', 'Chicken', 'Cheese', 'Bell Peppers', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '358 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Low sugar overnight Apple cinnamon oatmeal', , 5, 3, 'Low sugar overnight Apple cinnamon oatmeal', '', 'Regular', '', 'Calories:217', 'Apples', 'Cinnamon', 'Oats', 'Almond Milk', '', '*Eat hot or cold*', '', '', '', '', '', '', '', '', '', '', '', '', '', '217 cals', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Turmeric Curry chicken with jasmine brown rice and broccoli', , 8, 4, 'Turmeric Curry chicken with jasmine brown rice and broccoli', '', 'Regular', '', 'Chicken', 'Brown jasmine rice', 'Broccoli(can sub, just ask)', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Orange Chicken Bowl', , 8, 4, 'Orange Chicken Bowl', '', 'Regular', '', 'Nutrition Facts…', 'View more', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Healthy Jumbalaya', , 8, 4, 'Healthy Jumbalaya', '', 'Regular', '', 'Sausage', 'Bell pepper', 'Cauliflower', 'Shrimp', 'Celery', 'Tomatoes', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Cheesy chicken broccoli casserole', , 8, 4, 'Cheesy chicken broccoli casserole', '', 'Regular', '', 'Cauliflower', 'Broccoli', 'Cheese', 'Chicken', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });
// db.sequelize.query("INSERT INTO stock ('title', 'fulfillment_date', 'price', 'repeatItem', 'title1', 'title2', 'title3', 'line04', 'line05', 'line06', 'line07', 'line08', 'line09', 'line10', 'line11', 'line12', 'line13', 'line14', 'line15', 'line16', 'line17', 'line18', 'line19', 'line20', 'imageURL', 'description', 'protein', 'carbs', 'calories', 'category', 'fats', 'sodium', 'vegetarianOption', 'createdAt', 'updatedAt') VALUES ('Grilled salmon over mixed veggies', , 9, 4, 'Grilled salmon over mixed veggies', '', 'Regular', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', CURDATE(), CURDATE());").then(([results, metadata]) => {   });